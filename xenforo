#!/bin/bash
# by Dominik Stanis≈Çaw Suchora <suchora.dominik7@gmail.com>
# License: GNU GPLv3

shopt -s extglob

declare maxprocs='1' url _cookies old

IFS=$'\n'

ucurl() {
    curl -L -g -m 120 -s -b "$_cookies" --user-agent 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) QtWebEngine/5.15.2 Chrome/87.0.4280.144 Safari/537.36' -H 'Accept-Encoding: gzip, deflate' --compressed "$@"
}

get_user() {
    [ -z "$1" ] && return
    [[ "$1" =~ ^http[s]?://([[:alnum:]-]+\.)+[[:alpha:]]+/(.*[./])?([[:digit:]]+)/\?tooltip=true\&.*$ ]] || { echo "improper url - $1" >&2; return; }
    local -r id="${BASH_REMATCH[3]}"
    [ -e "m-$id" ] && return
    echo "$1" >&2
    local -r t="$(ucurl -b "$2" "$1" | jq -r '.html.content')"

    {
    echo "$id"
    echo "$(hgrep 'a +href="/misc/location-info.*" @p"%i\n"' <<< "$t")" #location
    echo "$(hgrep 'img +src @p"%(src)a\n"' <<< "$t" | sed 's#^/[^/]#'"$url"'\0#;s#^//#https://#;s/?.*//')" #avatar
    echo "$(sed -n '/<div class="memberProfileBanner memberTooltip-header.*url(/{s#.*url(##;s#^/[^/]#'"$url"'\0#;s#^//#https://#;s/?.*//;p;q}' <<< "$t")" #background
    echo "$(hgrep 'dl +class="pairs pairs--inline" @m">Joined<"; time +datetime @p"%(datetime)a\n"' <<< "$t")" #joined
    echo "$(hgrep 'dl +class="pairs pairs--inline" @m">Last seen<"; time +datetime @p"%(datetime)a\n"' <<< "$t")" #lastseen
    echo "$(hgrep 'span +class="userTitle" @p"%i\n"' <<< "$t")" #title
    echo "$(hgrep 'h4 class="memberTooltip-name"; a; .* @M"<" @p"%i\n"' <<< "$t")" #name
    echo "$(hgrep 'em; a +href @p"%(href)a\n"' <<< "$t")" #forum
    echo "$(hgrep 'dl @m"<dt>Messages</dt>"; dd; .* @M"<" @p"%i\n"' <<< "$t" | sed -n '/[0-9]/{s/[,\t]//gp;q}')" #messages
    echo "$(hgrep 'dl @m"<dt.*>Reaction.*</dt>"; dd; .* @M"<" @p"%i\n"' <<< "$t" | sed -n '/[0-9]/{s/[,\t]//gp;q}')" #reactionscore
    echo "$(hgrep 'dl @m"<dt title=".*">Points</dt>"; dd; .* @M"<" @p"%i\n"' <<< "$t" | sed -n '/[0-9]/{s/[,\t]//gp;q}')" #points
    } | jq -RnMc '
        .["id"]=input |
        .["location"]=input |
        .["avatar"]=input |
        .["background"]=input |
        .["joined"]=input |
        .["lastseen"]=input |
        .["title"]=input |
        .["name"]=input |
        .["forum"]=input |
        .["messages"]=input |
        .["reactionscore"]=input |
        .["points"]=input' > "m-$id"
}

get_thread() {
    [[ "$1" =~ ^http[s]?://([[:alnum:]-]+\.)+[[:alpha:]]+/(.*[./])?([[:digit:]]+)[/]?$ ]] || { echo "improper url - $1"; return; }
    local -r id="${BASH_REMATCH[3]}"
    [ -e "$id" ] && return
    echo "$1"
    local t="$(ucurl -D- "$1")"
    local t2 url_first_delimiter='?'
    [ -z "${1##*\?*}" ] && url_first_delimiter='&'
    local -r cookies="$(sed -n '/^<!DOCTYPE html>/q; /^[sS]et-[cC]ookie: /{s/Set-Cookie: //i;p}' <<< "$t" | sed ':x;s/\r//g;$!{N;s/\n/\;/;bx}')"
    local next

    {
    echo "$1" #link
    echo "$id" #id
    echo "$(hgrep 'h1 +class="p-title-value" @p"%i\n"' <<< "$t" | sed ':x; s/<[^>]*>//g; $!{N;s/\n/ /;bx}')" #title
    echo "$(hgrep 'div +class="p-description"; .* +data-user-id @p"%(data-user-id)a\n"' <<< "$t")" #user_id
    echo "$(hgrep 'div +class="p-description"; .* +data-user-id; .* @M"<" @p"%i\n"' <<< "$t")" #user
    echo "$(hgrep 'div +class="p-description"; time +datetime @p"%(datetime)a\n"' <<< "$t")" #date
    echo "$(hgrep 'ul +class="p-breadcrumbs .*" -class=".* p-breadcrumbs--bottom.*"; span @p"%i/"' <<< "$t")" #path
    echo "$(hgrep 'span +class="js-tagList"; a +class="tagItem tagItem--.*" @p"%i"' <<< "$t" | sed ':x; s/\t//g; /^$/d; $!{N;s/\n/|/;bx}; s/|$//; s/|\+/|/g')" #tags
    echo "$(hgrep 'form +data-xf-init="poll-block ajax-submit"; h2 +class="block-header" @p"%i\n"' <<< "$t" | sed 's/\t//g; s/<[^>]*>//g; s/^ *//; s/ *$//; /^$/d;')" #poll.title
    echo "$(paste -d '' <(hgrep 'form +data-xf-init="poll-block ajax-submit"; h3 +class="pollResult-response" @p"%i\n"' <<< "$t") <(hgrep 'form +data-xf-init="poll-block ajax-submit"; span +class="pollResult-votes" @p"%i\n"' <<< "$t" | sed 's/\t//g; s/<[^>]*>//g; s/^ *//; s/ *$//; /^$/d; s/^.* //') | sed ':x;$!{N;s/\n/\t/;bx}')" #poll.answers
    local xfToken="$(hgrep 'html +data-csrf @p"%(data-csrf)a\n"' <<< "$t")"
    [ -z "$xfToken" ] && xfToken="$(hgrep 'input +name="_xfToken" +value @p"%(value)a\n"' <<< "$t" | head -n1)"

    while :
    do
        for i in $(tr -d '\r\n\t\a' <<< "$t" | hgrep 'article +id @p"%A\n"')
        do
            {
            echo "$(hgrep 'h4 +class="message-name.*"; .* +data-user-id @p"%(data-user-id)a\n"' <<< "$i")" #user_id
            echo "$(hgrep 'h4 +class="message-name.*"; .* @M"<" @p"%i\n"' <<< "$i")" #user
            get_user "$(hgrep 'h4 +class="message-name"; a +data-user-id +href @p"'"$url"'%(href)a'"$url_first_delimiter"'tooltip=true&_xfWithData=1&_xfToken='"$xfToken"'&_xfResponseType=json\n"' <<< "$i")" "$cookies"
            t2="$(hgrep 'span +id="post-[0-9]*" @p"%(id)a\n"' <<< "$i")"
            echo "${t2#post-}" #id
            echo "$(hgrep 'time +datetime @p"%(datetime)a\n"' <<< "$i" | head -n1)" #date
            echo "$(hgrep 'div +class="bbWrapper" @p"%i\n"' <<< "$i")" #text
            echo "$(hgrep 'ul +class="attachmentList" @p"%i\n"' <<< "$i")" #attachments
            t2="$(hgrep 'a +class="reactionsBar-link" +href @p"'"$url"'%(href)a\n"' <<< "$i")"
            if [ -n "$t2" ] #reactions
            then
                echo "$(for j in $(ucurl -b "$cookies" "$t2${url_first_delimiter}_xfRequestUri=&_xfWithData=1&_xfToken=$xfToken&_xfResponseType=json" | jq -r .html.content | tr -d '\n\t' | hgrep 'div +class="contentRow"'); do hgrep '.* +class="username .*" +data-user-id @p"%(data-user-id)a\n", .* +class="username .*" +data-user-id; .* @M"<" @p"%i\n", time +class="u-dt" +datetime @p"%(datetime)a\n", span +class="reaction .*"; img +title @p"%(title)a\n"' <<< "$j" | sed ':x; $!{N;s/\n/|/;bx}'; done | sed ':x; $!{N;s/\n/^/;bx}')"
            else
                echo
            fi
            } | sed ':x;$!{N;s/\n/\t/;bx}'
        done

        next="$(hgrep 'div +class="block-outer"; a +class="pageNav-jump pageNav-jump--next" +href @p"'"$url"'%(href)a\n"' <<< "$t" | head -n1)"
        grep -q '/page-[0-9]*$' <<< "$next" || break
        t="$(ucurl -b "$cookies" "$next")"
    done
    } | jq -RnMcs '
        (inputs | split("\n")) as $lines |
        .["link"]=$lines[0] |
        .["id"]=$lines[1] |
        .["title"]=$lines[2] |
        .["user_id"]=$lines[3] |
        .["user"]=$lines[4] |
        .["date"]=$lines[5] |
        .["path"]=$lines[6] |
        .["tags"]=($lines[7] | split("|")) |
        .["poll"]=($lines[8:10] | {
            ("title"):.[0],
            ("answers"):(.[1] | split("\t") | map(split("") | {
                ("option"):.[0],
                ("votes"):.[1]
            }))
        }) |
        .["posts"]=($lines[10:-1] | map(split("\t") | {
            ("user_id"):.[0],
            ("user"):.[1],
            ("id"):.[2],
            ("date"):.[3],
            ("text"):.[4],
            ("attachments"):.[5],
            ("reactions"):(.[6] | split("^") | map(split("|") | {
                ("user_id"):.[0],
                ("user"):.[1],
                ("date"):.[2],
                ("reaction"):.[3]
            }))
        }))' > "$id"
}

get_category() {
    for i in $(hgrep 'h3 +class="node-title"; a +href @p"'"$url"'%(href)a\n"' <&0)
    do
        get_forum "$i"
    done
}

get_forum() {
    local t next
    t="$(ucurl "$1")"
    while :
    do
        for j in $(hgrep -E 'div +class="structItem-title"; a +href @p"'"$url"'%(href)a\n"' <<< "$t")
        do
            [ "$(jobs | wc -l)" -gt "$maxprocs" ] && wait %%
            get_thread "$j" &
        done

        next="$(hgrep 'div +class="block-outer"; a +class="pageNav-jump pageNav-jump--next" +href @p"'"$url"'%(href)a\n"' <<< "$t")"
        echo "$next"
        grep -q '/page-[0-9]*$' <<< "$next" || break
        t="$(ucurl "$next")"
    done
    get_category <<< "$t"
}

get_tag() {
    local t next
    t="$(ucurl "$1")"
    while :
    do
        for j in $(hgrep 'div +class="contentRow.*"; a +href -data-user-id @p"'"$url"'%(href)a\n"' <<< "$t")
        do
            [ "$(jobs | wc -l)" -gt "$maxprocs" ] && wait %%
            get_thread "$j" &
        done

        next="$(hgrep 'div +class="block-outer block-outer--after"; a +class="pageNav-jump pageNav-jump--next" +href @p"'"$url"'%(href)a\n"' <<< "$t")"
        echo "$next"
        grep -q '/page-[0-9]*$' <<< "$next" || break
        t="$(ucurl "$next")"
    done
}

get_old_thread() {
    [[ "$1" =~ ^http[s]?://([[:alnum:]-]+\.)+[[:alpha:]]+/(.*[./])?([[:digit:]]+)[/]?$ ]] || { echo "improper url - $1"; return; }
    local -r id="${BASH_REMATCH[3]}"
    [ -e "$id" ] && return
    echo "$1"
    local t="$(ucurl "$1")" t2 next messageUserBlock avatar

    {
    echo "$1" #link
    echo "$id" #id
    echo "$(hgrep 'div +class="titleBar.*"; h1 @p"%i\n"' <<< "$t" | sed ':x; s/<[^>]*>//g; $!{N;s/\n/ /;bx}')" #title
    echo "$(hgrep 'p +id="pageDescription"; a +class="username" +href @p"%(href)a\n"' <<< "$t" | sed 's/^.*[/.]\([0-9]\+\)/\1/; s/[^0-9]$//')" #user_id
    echo "$(hgrep 'p +id="pageDescription"; a +class="username" @p"%i\n"' <<< "$t")" #user
    echo "$(hgrep 'p +id="pageDescription"; .* +class="DateTime" @p"%i\n"' <<< "$t")" #date
    echo "$(hgrep 'span +class="crumbs"; span +itemprop="title"; .* @M"<" @p"%i/"' <<< "$t")" #path
    echo "$(hgrep 'ul +class="tagList"; a +class="tag" @p"%i|"' <<< "$t" | sed 's/<[^>]*>[^<]*<\/[^>]*>//g; s/|$//')" #tags

    while :
    do
        for i in $(tr -d '\n\t' <<< "$t" | hgrep 'ol +id="messageList"; li +id="post-[0-9]*" +data-author @l[1]')
        do
            {
            echo "$(hgrep 'li +data-author @l[0] @p"%(data-author)a\n"' <<< "$i")" #user
            messageUserBlock="$(hgrep 'div +class="messageUserBlock.*" @p"%i\n"' <<< "$i")"
            avatar="$(hgrep 'a +class="avatar.*"; img +src @p"'"$url"'/%(src)a\n"' <<< "$messageUserBlock")"
            if [ -z "$avatar" ]
            then
                echo "$(hgrep 'span +class="img m" +style @p"%(style)a\n"' <<< "$messageUserBlock" | sed 's#^.*/avatars/m/##; s#/.*##')" #user_id
                echo "$(hgrep 'span +class="img m" +style @p"'"$url"'%(style)a\n"' <<< "$messageUserBlock" | sed "s/?[0-9]*')//; s/background-image: url('/\//; s/')$//")" #avatar
            else
                [[ "$(hgrep 'a +class="avatar.*" +href @p"%(href)a\n"' <<< "$messageUserBlock")" =~ \.([[:digit:]]*)[/]?$ ]] && echo "${BASH_REMATCH[1]}" || echo
                echo "${avatar%\?[[:digit:]]*}" #avatar
            fi
            echo "$(hgrep 'h3 +class="userText"; em +class="userTitle.*" @p"%i\n"' <<< "$messageUserBlock")" #user_title
            echo "$(hgrep 'h3 +class="userText"; em +class="userBanner.*"; .* @M"<" @p"%i\n"' <<< "$messageUserBlock" | sed '/^[ \t]*$/d')" #user_banner
            echo "$(paste -d/ <(hgrep 'dt; .* @M"<" @p"%i\n"' <<< "$messageUserBlock") <(hgrep 'dd; .* @M"<" @p"%i\n"' <<< "$messageUserBlock") | sed ':x;$!{N;s/\n/|/;bx}')" #user_extra
            t2="$(hgrep 'li +data-author @l[0] +id="post-[0-9]*" @p"%(id)a\n"' <<< "$i")"
            echo "${t2#post-}" #id
            echo "$(hgrep 'div +class="messageContent"; article @p"%i\n"' <<< "$i")" #text
            } | sed ':x;$!{N;s/\n/\t/;bx}'
        done

        next="$(hgrep 'nav; a +class +href=".*/page-[0-9]*" @m"^[^0-9]*&gt;" @p"'"$url"'/%(href)a\n"' <<< "$t" | tail -n1)"
        grep -q '/page-[0-9]*$' <<< "$next" || break
        t="$(ucurl "$next")"
    done
    } | jq -RnMcs '
        (inputs | split("\n")) as $lines |
        .["link"]=$lines[0] |
        .["id"]=$lines[1] |
        .["title"]=$lines[2] |
        .["user_id"]=$lines[3] |
        .["user"]=$lines[4] |
        .["date"]=$lines[5] |
        .["path"]=$lines[6] |
        .["tags"]=($lines[7] | split("|")) |
        .["posts"]=($lines[8:-1] | map(split("\t") | {
            ("user"):.[0],
            ("user_id"):.[1],
            ("avatar"):.[2],
            ("user_title"):.[3],
            ("user_banner"):.[4],
            ("user_extra"):(.[5] | split("|") | map(split("/") | {
                    ("name"):.[0],
                    ("value"):.[1]
            })),
            ("id"):.[6],
            ("text"):.[7]
        }))' > "$id"
}

get_old_category() {
    for i in $(hgrep 'h3 +class="nodeTitle"; a -href="#.*" +href @p"'"$url"'/%(href)a\n"' <&0)
    do
        get_old_forum_tag "$i"
    done
}

get_old_forum_tag() {
    local t next
    t="$(ucurl "$1")"
    while :
    do
        for j in $(hgrep 'li +id; div +class="titleText"; h3 +class="title"; a +href @p"'"$url"'/%(href)a\n"' <<< "$t")
        do
            [ "$(jobs | wc -l)" -gt "$maxprocs" ] && wait %%
            get_old_thread "$j" &
        done

        next="$(hgrep 'nav; a +class +href=".*/page-[0-9]*" @m"^[^0-9]*&gt;" @p"'"$url"'/%(href)a\n"' <<< "$t" | tail -n1)"
        echo "$next"
        grep -q '/page-[0-9]*$' <<< "$next" || break
        t="$(ucurl "$next")"
    done
    get_old_category <<< "$t"
}

baseurl() {
    sed -E 's/(http[s]:\/\/([[:alnum:]-]+\.)+[[:alpha:]]+).*/\1/' <<< "$1"
}

usage() {
    printf '%s [OPTION]... [URL]...\n' "${0##*/}"
    printf 'Download, convert to json and save xenforo forums from URL.\n\n'
    printf 'Options:\n  -d,\t--dir DIR\t\tchange directory to DIR\n'
    printf '  -p,\t--max-procs NUM\t\tset number of processes to run at a time\n'
    printf '  -b,\t--cookie DATA|FILENAME\tpass cookie to curl\n'
    printf '  -t,\t--thread URL\t\tpass URL as thread link\n'
    printf '  -T,\t--tag URL\t\tpass URL as tag link\n'
    printf '  -f,\t--forum URL\t\tpass URL as forum link\n'
    printf '  -c,\t--category URL\t\tpass URL as category link, can be used to download the whole forum\n'
    printf '  -o,\t--old\t\t\tuse old format\n'
    printf '  -h,\t--help\t\t\tshow this message\n'
}

[ "$#" -eq 0 ] && { usage >&2; exit 1; }

while [ "$#" -gt 0 ]
do
    case "$1" in
        -d|--dir) cd "$2" || break; shift;;
        -t|--thread)
            url="$(baseurl "$2")"
            if [ -n "$old" ]
            then
                get_old_thread "$2"
            else
                get_thread "$2"
            fi
            shift;;
        -f|--forum)
            url="$(baseurl "$2")"
            if [ -n "$old" ]
            then
                get_old_forum_tag "$2"
            else
                get_forum "$2"
            fi
            shift;;
        -T|--tag)
            url="$(baseurl "$2")"
            if [ -n "$old" ]
            then
                get_old_forum_tag "$2"
            else
                get_tag "$2"
            fi
            shift;;
        -c|--category)
            url="$(baseurl "$2")"
            if [ -n "$old" ]
            then
                ucurl "$2" | get_old_category "$2"
            else
                ucurl "$2" | get_category "$2"
            fi
            shift;;
        -b|--cookie) _cookies="$2"; shift;;
        -p|--max-procs) maxprocs="$2"; shift;;
        -o|--old) old='1';;
        -h|--help) usage >&2; exit;;
        -*) usage >&2; exit 1;;
        *) break;;
    esac
    shift
done

while [ "$#" -gt 0 ]
do
    url="$(baseurl "$1")"
    case "$1" in
        http?(s)://+(+([[:alnum:]-]).)+([[:alpha:]])/?(*[/?])@(thread?(s)|topic?(s))/*)
            if [ -n "$old" ]
            then
                get_old_thread "$1"
            else
                get_thread "$1"
            fi;;
        http?(s)://+(+([[:alnum:]-]).)+([[:alpha:]])/?(*[/?])forum?(s)/*)
            if [ -n "$old" ]
            then
                get_old_forum_tag "$1"
            else
                get_forum "$1"
            fi;;
        http?(s)://+(+([[:alnum:]-]).)+([[:alpha:]])/?(*[/?])tag?(s)/*)
            if [ -n "$old" ]
            then
                get_old_forum_tag "$1"
            else
                get_tag "$1"
            fi;;
    esac
    shift
done
